{"ast":null,"code":"var _jsxFileName = \"/Users/yoondajung/Documents/CodeReview/code-review/src/component/button/CategorySelectButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { styled } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledButton = styled.button`\n\n    background-color: ${({\n  isCategorySelected\n}) => isCategorySelected ? \"#CCCCCC\" : \"white\"};\n    color: ${({\n  isCategorySelected\n}) => isCategorySelected ? \"black\" : \"black\"};\n    font-size: 16px;\n    padding: 5px 15px;\n    border: 1px solid #CCCCCC;\n    border-radius: 5px;\n    min-width: 93px;\n    height: 35px;\n    cursor: pointer;\n\n\n    /* 호버 상태 스타일 */\n    &:hover {\n        background-color: ${({\n  isCategorySelected\n}) => isCategorySelected ? \"#CCCCCC\" : \"#f0f0f0\"};\n    }\n\n    /* 클릭 상태 스타일 */\n    &:focus {\n        outline: none; /* 클릭 후 포커스 표시 제거 */\n        background-color: #999999; /* 클릭시 더 진한 회색 배경색 */\n        color: white; /* 클릭시 글자색을 흰색으로 변경 */\n    }\n\n`;\n_c = StyledButton;\nconst CategorySelectButton = ({\n  category,\n  onClick\n}) => {\n  _s();\n  const [isSelected, setIsSelected] = useState(false);\n  const handleCategoryClick = () => {\n    setIsSelected(true); // 클릭된 버튼의 상태를 true로 변경\n    onClick(category);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    isSelected: isSelected,\n    onClick: handleCategoryClick,\n    children: category\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(CategorySelectButton, \"5DtxMhs0n+JsbGWNZftSFTxrVZQ=\");\n_c2 = CategorySelectButton;\nexport default CategorySelectButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"CategorySelectButton\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","StyledButton","button","isCategorySelected","_c","CategorySelectButton","category","onClick","_s","isSelected","setIsSelected","handleCategoryClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/yoondajung/Documents/CodeReview/code-review/src/component/button/CategorySelectButton.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport { styled } from \"styled-components\";\n\n\nconst StyledButton = styled.button`\n\n    background-color: ${({ isCategorySelected }) => (isCategorySelected ? \"#CCCCCC\" : \"white\")};\n    color: ${({ isCategorySelected }) => (isCategorySelected ? \"black\" : \"black\")};\n    font-size: 16px;\n    padding: 5px 15px;\n    border: 1px solid #CCCCCC;\n    border-radius: 5px;\n    min-width: 93px;\n    height: 35px;\n    cursor: pointer;\n\n\n    /* 호버 상태 스타일 */\n    &:hover {\n        background-color: ${({ isCategorySelected }) => (isCategorySelected ? \"#CCCCCC\" : \"#f0f0f0\")};\n    }\n\n    /* 클릭 상태 스타일 */\n    &:focus {\n        outline: none; /* 클릭 후 포커스 표시 제거 */\n        background-color: #999999; /* 클릭시 더 진한 회색 배경색 */\n        color: white; /* 클릭시 글자색을 흰색으로 변경 */\n    }\n\n`;\n\nconst CategorySelectButton = ({ category, onClick }) => {\n    const [isSelected, setIsSelected] = useState(false);\n\n    const handleCategoryClick = () => {\n        setIsSelected(true); // 클릭된 버튼의 상태를 true로 변경\n        onClick(category);\n    };\n\n    return (\n        <StyledButton isSelected={isSelected} onClick={handleCategoryClick}>\n            {category}\n        </StyledButton>\n    );\n};\n\nexport default CategorySelectButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,YAAY,GAAGH,MAAM,CAACI,MAAO;AACnC;AACA,wBAAwB,CAAC;EAAEC;AAAmB,CAAC,KAAMA,kBAAkB,GAAG,SAAS,GAAG,OAAS;AAC/F,aAAa,CAAC;EAAEA;AAAmB,CAAC,KAAMA,kBAAkB,GAAG,OAAO,GAAG,OAAS;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,CAAC;EAAEA;AAAmB,CAAC,KAAMA,kBAAkB,GAAG,SAAS,GAAG,SAAW;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAzBIH,YAAY;AA2BlB,MAAMI,oBAAoB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,mBAAmB,GAAGA,CAAA,KAAM;IAC9BD,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACrBH,OAAO,CAACD,QAAQ,CAAC;EACrB,CAAC;EAED,oBACIN,OAAA,CAACC,YAAY;IAACQ,UAAU,EAAEA,UAAW;IAACF,OAAO,EAAEI,mBAAoB;IAAAC,QAAA,EAC9DN;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEvB,CAAC;AAACR,EAAA,CAbIH,oBAAoB;AAAAY,GAAA,GAApBZ,oBAAoB;AAe1B,eAAeA,oBAAoB;AAAC,IAAAD,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}